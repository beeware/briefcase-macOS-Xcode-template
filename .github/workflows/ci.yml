name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

env:
  python_version: "3.9"

defaults:
  run:
    shell: bash # https://github.com/beeware/briefcase/pull/912

jobs:
  verify-apps:
    name: Build apps
    strategy:
      matrix:
        os_name: ["macOS"]
        framework: ["toga", "pyside2", "pyside6", "ppb"]
        include:
          - os_name: macOS
            platform: macos-12
            briefcase-data-dir: ~/Library/Caches/org.beeware.briefcase
            pip-cache-dir: ~/Library/Caches/pip
            docker-cache-dir: ~/Library/Containers/com.docker.docker/Data/vms/0/

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Cache Briefcase tools
        uses: actions/cache@v3.0.11
        with:
          key: briefcase-${{ matrix.platform }}
          path: |
            ~/.cookiecutters
            ${{ matrix.briefcase-data-dir }}
            ${{ matrix.pip-cache-dir }}
            ${{ matrix.docker-cache-dir }}
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ env.python_version }}
      - name: Install packages
        run: pip install briefcase
      - name: Create App
        run: |
          cd tests/apps
          cat verify-${{ matrix.framework }}.config | briefcase new
      - name: Modify pyproject.toml to use local template
        run: |
          cd tests/apps/verify-${{ matrix.framework }}
          { head -n 1 pyproject.toml; echo "template = '../../../'"; tail -n +2 pyproject.toml; } > pyproject.toml.tmp
          rm pyproject.toml
          mv pyproject.toml.tmp pyproject.toml
      - name: Build App
        run: |
          cd tests/apps/verify-${{ matrix.framework }}
          briefcase create
          echo 'CREATE COMPLETE'
          ls -lah macOS/app/*
          echo "RUNNING BUILD"
          briefcase build
          echo 'BUILD COMPLETE'
          ls -lah macOS/app/*
          briefcase package --adhoc-sign
      - uses: actions/upload-artifact@v3
        name: Upload failure
        if: failure()
        with:
          name: build-failure-logs-${{ matrix.framework }}
          path: tests/apps/verify-${{ matrix.framework }}/logs/*

      - name: Build Xcode project
        if: matrix.os_name == 'macOS'
        run: |
          cd tests/apps/verify-${{ matrix.framework }}
          briefcase create ${{ matrix.os_name }} Xcode
          echo 'CREATE COMPLETE'
          ls -lah macOS/app/*
          briefcase build ${{ matrix.os_name }} Xcode
          echo 'BUILD COMPLETE'
          ls -lah macOS/app/*
          briefcase package ${{ matrix.os_name }} Xcode --adhoc-sign
      - uses: actions/upload-artifact@v3
        name: Upload failure
        if: failure()
        with:
          name: build-failure-logs-${{ matrix.framework }}
          path: tests/apps/verify-${{ matrix.framework }}/logs/*
      - name: Build Android App
        if: matrix.framework == 'toga'
        run: |
          cd tests/apps/verify-${{ matrix.framework }}
          briefcase create android
          echo 'CREATE COMPLETE'
          ls -lah android/app/*
          briefcase build android
          echo 'CREATE COMPLETE'
          ls -lah android/app/*
          briefcase package android --adhoc-sign
      - uses: actions/upload-artifact@v3
        name: Upload failure
        if: failure()
        with:
          name: build-failure-logs-${{ matrix.framework }}
          path: tests/apps/verify-${{ matrix.framework }}/logs/*
      - name: Build iOS App
        if: matrix.platform == 'macos-12' && matrix.framework == 'toga'
        run: |
          cd tests/apps/verify-${{ matrix.framework }}
          briefcase create iOS
          echo 'CREATE COMPLETE'
          ls -lah iOS/app/*
          briefcase build iOS -d "iPhone SE (2nd generation)"
          echo 'CREATE COMPLETE'
          ls -lah iOS/app/*
          briefcase package iOS --adhoc-sign
      - uses: actions/upload-artifact@v3
        name: Upload failure
        if: failure()
        with:
          name: build-failure-logs-${{ matrix.framework }}
          path: tests/apps/verify-${{ matrix.framework }}/logs/*
      - name: Build Web App
        if: matrix.framework == 'toga'
        run: |
          cd tests/apps/verify-${{ matrix.framework }}
          briefcase create web
          briefcase build web
          briefcase package web
      - uses: actions/upload-artifact@v3
        name: Upload failure
        if: failure()
        with:
          name: build-failure-logs-${{ matrix.framework }}
          path: tests/apps/verify-${{ matrix.framework }}/logs/*
